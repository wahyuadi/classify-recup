#!/bin/sh

# classifyrecup.sh - Classify recup directories contents generated by Photorec into
# folders of file extensions like Foremost does.
# 
# Author: Wahyu Adi Setyanto <wahyu.adi@gmail.com>
# Last updated: 25 February 2013
#
# This file is distributed under GNU General Public License version 2 or later.
#

#
# strip trailing slashes
#
INPUTDIR=$(echo "$1" | sed 's/\/$//g')
OUTPUTDIR=$(echo "$2" | sed 's/\/$//g')

FILTER=recup_dir

if [ -d "$1" ] && [ -d "$2" ]
then
    #
    # how many (remaining) recup_dirs do we have?
    # this safely assumes we always start from where the script stopped on previous run
    #
    END=`/bin/ls -1 "$INPUTDIR/" | /usr/bin/grep -i "$FILTER" | /usr/bin/sed 's/[a-zA-Z_.]*//' | /usr/bin/sort -n -r | /usr/bin/head -n 1`
    START=`/bin/ls -1 "$INPUTDIR/" | /usr/bin/grep -i "$FILTER" | /usr/bin/sed 's/[a-zA-Z_.]*//' | /usr/bin/sort | /usr/bin/head -n 1`
    N=$((END - START))
    echo "Found $N recup_dirs.\n"

    echo "(Re)starting from $FILTER $START.\n"

    #
    # iterate on those recup_dirs
    #
    declare -i i=$START
    while [ $i -le $END ]
    do
        #
        # we may continue at where the user stopped, accidentally or not.
        #
        SOURCE=$INPUTDIR/$FILTER.$i
        if [ ! -d "$SOURCE" ];
        then
            echo "Non-existent directory $SOURCE skipped."
            continue
        fi

        #
        # classify each file by its extension, then iterate each folder and classify
        # afterwards, delete the original
        #
        EXTENSIONS=`/bin/ls -1 "$SOURCE/" | /usr/bin/awk -F . '{print $NF}' | /usr/bin/sort | /usr/bin/uniq`
        echo "Found the following extensions in $SOURCE:\n $EXTENSIONS.\n"
        for j in $EXTENSIONS
        do
            if [ ! -d "$OUTPUTDIR/$j" ]
            then
                /bin/mkdir -p $OUTPUTDIR/$j
                echo "$OUTPUTDIR/$j/ directory created.\n"
            fi
            echo "syncing $SOURCE/*$j..."
            /usr/bin/rsync -av $SOURCE/*$j $OUTPUTDIR/$j/
            echo "DONE.\n"
            /bin/rm $SOURCE/*$j
            echo "$j file(s) in $SOURCE deleted.\n"
        done
"classifyrecup.sh" 76L, 2016C written
TI-Kompass-iMac:classify-recup tikompas$ vim classifyrecup.sh 

#!/bin/sh

# classifyrecup.sh - Classify recup directories contents generated by Photorec into
# folders of file extensions like Foremost does.
# 
# Author: Wahyu Adi Setyanto <wahyu.adi@gmail.com>
# Last updated: 25 February 2013
#
# This file is distributed under GNU General Public License version 2 or later.
#

#
# strip trailing slashes
#
INPUTDIR=$(echo "$1" | sed 's/\/$//g')
OUTPUTDIR=$(echo "$2" | sed 's/\/$//g')

FILTER=recup_dir

if [ -d "$1" ] && [ -d "$2" ]
then
    #
    # how many (remaining) recup_dirs do we have?
    # this safely assumes we always start from where the script stopped on previous run
    #
    END=`/bin/ls -1 "$INPUTDIR/" | /usr/bin/grep -i "$FILTER" | /usr/bin/sed 's/[a-zA-Z_.]*//' | /usr/bin/sort -n -r | /usr/bin/head -n 1`
    START=`/bin/ls -1 "$INPUTDIR/" | /usr/bin/grep -i "$FILTER" | /usr/bin/sed 's/[a-zA-Z_.]*//' | /usr/bin/sort | /usr/bin/head -n 1`
    N=$((END - START))
    echo "Found $N recup_dirs.\n"

    echo "(Re)starting from $FILTER $START.\n"

    #
    # iterate on those recup_dirs
    #
    declare -i i=$START
    while [ $i -le $END ]
    do
        #
        # we may continue at where the user stopped, accidentally or not.
        #
        SOURCE=$INPUTDIR/$FILTER.$i
        if [ ! -d "$SOURCE" ];
        then
            echo "Non-existent directory $SOURCE skipped."
            continue
        fi

        #
        # classify each file by its extension, then iterate each folder and classify
        # afterwards, delete the original
        #
        EXTENSIONS=`/bin/ls -1 "$SOURCE/" | /usr/bin/awk -F . '{print $NF}' | /usr/bin/sort | /usr/bin/uniq`
        echo "Found the following extensions in $SOURCE:\n $EXTENSIONS.\n"
        for j in $EXTENSIONS
        do
            if [ ! -d "$OUTPUTDIR/$j" ]
            then
                /bin/mkdir -p $OUTPUTDIR/$j
                echo "$OUTPUTDIR/$j/ directory created.\n"
            fi
            echo "syncing $SOURCE/*$j..."
            /usr/bin/rsync -av $SOURCE/*$j $OUTPUTDIR/$j/
            echo "DONE.\n"
            /bin/rm $SOURCE/*$j
            echo "$j file(s) in $SOURCE deleted.\n"
        done
        echo "$SOURCE removed.\n"
        /bin/rm -R $SOURCE
        (( i = i + 1 ))
    done
else
    echo "Syntax: $0 input_dir output_dir";
fi



